package com.zcoinexchange;
public class UserDetails extends ZCoinExchange{
    static Scanner scan=new Scanner(System.in);
    public static void getUserDetails(String login) {
        System.out.println("Enter the ZID:");
        int zid=scan.nextInt();
        if(account.get(login).getZid()==zid) {
            System.out.println("RC Balance: "+account.get(login).getRc()+"ZCoin Balance: "+account.get(login).getZcoin());
        }
        else {
            System.out.println("Invalid Zid");
        }
    }
    public static String setPassword(String name,String mail) {
        String password="";
        while(!Pattern.matches("(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@#$&\\*\\.><]).{8,15}", password)) {
            System.out.println("Password must contains 8 to 15 Character.Password must have one uppercase letter,one lowercase letter and numbers.\nEnter the Password");
            password=scan.nextLine();
        }
        return password;
    }
    public static void rcTransaction(String mail) {
        System.out.println("1.Deposit\n2.Withdrawl\n3.RC to ZCoin Conversion");
        int decision =scan.nextInt();
        if(decision ==1) {
            System.out.println("Enter the Deposit amount");
            account.get(mail).depositRc(scan.nextInt());
        }
        else if(decision ==2) {
            System.out.println("Enter the Withdrawl amount");
            int withdrawl=scan.nextInt();
            if(withdrawl>account.get(mail).getRc()) {
                System.out.println("Insufficient Money");
            }
            else {
                account.get(mail).withdrawlRc(withdrawl);
            }
        }
        else if(decision ==3) {
            System.out.println("Enter the RC to ZCoin Coversion amount");
            account.get(mail).convertRcToZcoin(scan.nextInt());
        }
    }
    public static void transactionHistory(String mail) {
        System.out.println("1.RC Transaction History\n2.ZCoin Transaction History");
        int decision =scan.nextInt();
        if(decision ==1) {
            ArrayList <String>transhistory=new ArrayList<String>(account.get(mail).getRcTransaction());
            for(String str:transhistory) {
                System.out.println(str);
            }
        }
        else if(decision ==2) {
            ArrayList <String>transhistory=new ArrayList<String>(account.get(mail).getZcoinTransaction());
            for(String str:transhistory) {
                System.out.println(str);
            }
        }
    }
    public static void zcoinTransaction(String mail) {
        System.out.println("1.ZCoinTransaction\n2.ZCoin to RC Conversion");
        int decision =scan.nextInt();
        if(decision ==1) {
            System.out.println("Enter the Zid to transfer the amount");
            int zid=scan.nextInt();
            if(zidAccount.containsKey(zid)) {
                System.out.println("Enter the amount to transfer");
                int amount=scan.nextInt();
                if(account.get(mail).getZcoin()>amount) {
                    account.get(mail).transferZcoin(amount);
                    zidAccount.get(account.get(mail).getZid()).transferZcoin(amount);
                    zidAccount.get(zid).receiveZcoin(amount);
                    account.get(zidAccount.get(zid).getMail()).receiveZcoin(amount);
                }
                else {
                    System.out.println("You don't have enough ZCoin");
                }
            }
        }
        else if(decision ==2) {
            System.out.println("Enter the amount to convert zcoin to rc for wihdrawl");
            account.get(mail).convertZcoinToRc(scan.nextInt());
        }

    }
}